package lecturesJava001.lecture1;

public class Conjuctions {
    public static void main(String[] args) {

        //              Конъюнкция (логическое И):

        /*Оператор && в Java выполняет операцию конъюнкции между
        двумя логическими выражениями. Результат конъюнкции истинен
        только в том случае, если оба операнда истинны.
        Если хотя бы один из операндов ложен, то результат будет ложным.

        Оператор & выполняет логическую операцию И между двумя операндами.
        в отличие от &, оператор && использует ленивую оценку.
        Это означает, что если первый операнд является ложным,
        второй операнд не вычисляется,
        так как результат всегда будет ложным.

        Если вам нужно, чтобы оба операнда были вычислены, используйте &.
        Если вы хотите использовать ленивую оценку и предотвратить
        лишние вычисления, используйте &&.*/

        boolean a = true;
        boolean b = false;

        boolean result = a && b; // Конъюнкция
        System.out.println("a && b = " + result); // Вывод: a && b = false


        //              Дизъюнкция (логическое ИЛИ):
        /*Оператор || в Java выполняет операцию дизъюнкции между
        двумя логическими выражениями. Результат дизъюнкции истинен,
        если хотя бы один из операндов истинен.
        Если оба операнда ложны, то результат будет ложным.

        В Java операторы | и || также различаются и выполняют
        разные виды логических операций,
        аналогично различию между & и &&.*/

        boolean a1 = true;
        boolean b1 = false;

        boolean result1 = a1 || b1; // Дизъюнкция
        System.out.println("a || b = " + result1); // Вывод: a || b = true


        //        Разделительная дизъюнкция (исключающее ИЛИ):

        /*Оператор ^ в Java выполняет операцию разделительной дизъюнкции
        (или исключающего ИЛИ) между двумя логическими выражениями.
        Результат разделительной дизъюнкции истинен только в том случае,
        если один из операндов истинен, но не оба.
        Если оба операнда одинаковы (оба истинны или оба ложны),
        то результат будет ложным.*/

        boolean a2 = true;
        boolean b2 = false;

        boolean result2 = a2 ^ b2; // Разделительная дизъюнкция
        System.out.println("a ^ b = " + result2); // Вывод: a ^ b = true


        //                 Инверсия (логическое НЕ):

        /*Оператор ! в Java выполняет операцию инверсии,
        которая изменяет значение логического выражения на противоположное.
        Если исходное выражение истинно,
        то инверсия сделает его ложным, и наоборот.*/

        boolean a3 = true;

        boolean result3 = !a; // Инверсия
        System.out.println("!a = " + result3); // Вывод: !a = false

    }
}
